
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  name: interfaceclaims.core.vedette.io
spec:
  group: core.vedette.io
  names:
    categories:
    - vedette
    kind: InterfaceClaim
    listKind: InterfaceClaimList
    plural: interfaceclaims
    shortNames:
    - ic
    singular: interfaceclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.instance.name
      name: Instance
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InterfaceClaim is a user's request to bind to an InterfaceInstance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InterfaceClaimSpec defines the desired state of InterfaceClaim.
            properties:
              capabilities:
                description: Required capabilities of the InterfaceInstance.
                items:
                  type: string
                minItems: 1
                type: array
              capacity:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Required capacity of a suitable InterfaceInstance.
                type: object
              inputs:
                description: Inputs of the bound InterfaceInstance.
                items:
                  properties:
                    configMapRef:
                      description: ConfigMapRef references a ConfigMap in this namespace.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    name:
                      description: Name of an output of an InterfaceInstance.
                      type: string
                    secretRef:
                      description: SecretRef references a Secret in this namespace.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - name
                  type: object
                type: array
              instance:
                description: Instance this Claim is bound to. Must be set when the
                  Claim is Bound.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              selector:
                description: Limit available InterfaceInstances for binding.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            type: object
          status:
            description: InterfaceClaimStatus defines the observed state of InterfaceClaim
            properties:
              conditions:
                description: Current conditions that apply to this instance.
                items:
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transits from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is the human readable message indicating
                        details about last transition.
                      type: string
                    reason:
                      description: Reason is the (brief) reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition, one of ('True',
                        'False', 'Unknown').
                      type: string
                    type:
                      description: Type is the type of the InterfaceClaim condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  by the controller.
                format: int64
                type: integer
              phase:
                description: DEPRECATED. Phase represents the current lifecycle state
                  of this object. Consider this field DEPRECATED, it will be removed
                  as soon as there is a mechanism to map conditions to strings when
                  printing the property. This is only for display purpose, for everything
                  else use conditions.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
